ggplot(p,aes(x=p[,1]))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1, bw=bw)+
ggtitle("exp(2)")
p<-data.frame(rpois(10000,0.8))
ggplot(p,aes(x=p[,1]))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1, bw=bw)+
ggtitle("pois(0.8)")
ggplot(Fires, aes(x=Traffic,y=Fires))+
geom_point(shape=1)+
ggtitle("Fires vs traffic")
ggplot(Fires, aes(Fires, fill=as.factor(Limit)))+
geom_bar(position = position_dodge(0.5), alpha =0.5)+
ggtitle("Count of fire, by limit of speed")
ggplot(Fires, aes(x=Fires))+
geom_bar(shape=1)+
facet_grid(~Type)+
ggtitle("Fires by type of tunnel")
ggplot(Fires, aes(x=Fires, fill=Type))+
geom_bar(position="fill")+
ggtitle("Repartition of fires by tunnel type")
ggplot(Fires, aes(x=Type))+
geom_bar()+
ggtitle("Repartition of tunnels")
ggplot(Fires, aes(x=HGV,y=Traffic))+
geom_point()+
ggtitle("Traffic VS HGV")
ggplot(Fires, aes(x=Fires, fill=Urban))+
geom_bar(position = "dodge")+
ggtitle("Fire VS Urban ")
ggplot(Fires, aes(x=Slope, y=Fires))+
geom_point(shape=1)+
ggtitle("Fires VS slope")
ggplot(Fires, aes(x=Fires, fill=Company))+
geom_bar(position="fill")+
ggtitle("Fires by compagny")
ggplot(Fires, aes(x=Tunnel, y=Fires))+
geom_point()+
ggtitle("Fires by Tunnel")
ggplot(Fires, aes(x=Fires, fill=SlopeType))+
geom_bar(position = position_dodge(0.5))+
ggtitle("Fires by SlopeType")
ggplot(Fires, aes(x=Fires, fill=SlopeType))+
geom_bar(position = "fill")+
ggtitle("Fires by SlopeType")
ggplot(Fires, aes(x=Traffic, y=Fires, shape=SlopeType))+
geom_point()+
facet_grid(~SlopeType)
ggtitle("Fires VS Traffic, by Slope type")
ggplot(Fires, aes(x= Slope,y=Fires))+
geom_bin_2d()+
ggtitle("Fires VS Slope")
# lm1 <-lm(Fires~.,data=Fires)
# summary(lm1)
lm1 <- lm(Fires~Traffic+HGV+Slope+Urban+Type+Length+Limit+SlopeType, data = Fires)
summary(lm1)
#Checking linearity
y<-fitted.values(lm1)
r<-rstandard(lm1)
ggplot(data.frame(y,r),aes(y,r))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("standardized residuals vs fitted values")
#checking variance
r2 <- abs(r)
ggplot(data.frame(y,r2),aes(y,r2))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("absolute standardized residuals vs fitted values")
# checking independance
acf(r, lag.max = NULL,
type = c("correlation", "covariance", "partial"),
plot = TRUE, na.action = na.fail, demean = TRUE)
pacf(r, lag.max = NULL,
plot = TRUE, na.action = na.fail, demean = TRUE)
#checking normality
ggplot(lm1, aes(sample=r))+
stat_qq()+
geom_abline(slope=0.5,intercept = coefficients(lm1)[1])+
ggtitle("Normal Q-Q plot")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(cache = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ggplot2)
library(corrplot)
library(plotly)
library(ggExtra)
load("Data/Fires.RData")
head(Fires)
#str(Fires)
# Fires[1:nrow(Fires),2:ncol(Fires)] %>% pivot_longer(everything()) %>%
#   ggplot(aes(value)) +
#   facet_wrap(~ name, scales = "free",ncol=3) +
#   geom_histogram()+
#   ggtitle("First look on the data")
bw=0.3
ggplot(Fires, aes(x=Fires))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1)+
ggtitle("Repartition of y")
# yp<-density(Fires$Fires)
# pp<-rpois(length(yp),0.8)
p<-data.frame(rexp(100,2))
ggplot(p,aes(x=p[,1]))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1, bw=bw)+
ggtitle("exp(2)")
p<-data.frame(rpois(10000,0.8))
ggplot(p,aes(x=p[,1]))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1, bw=bw)+
ggtitle("pois(0.8)")
ggplot(Fires, aes(x=Traffic,y=Fires))+
geom_point(shape=1)+
ggtitle("Fires vs traffic")
ggplot(Fires, aes(Fires, fill=as.factor(Limit)))+
geom_bar(position = position_dodge(0.5), alpha =0.5)+
ggtitle("Count of fire, by limit of speed")
ggplot(Fires, aes(x=Fires))+
geom_bar(shape=1)+
facet_grid(~Type)+
ggtitle("Fires by type of tunnel")
ggplot(Fires, aes(x=Fires, fill=Type))+
geom_bar(position="fill")+
ggtitle("Repartition of fires by tunnel type")
ggplot(Fires, aes(x=Type))+
geom_bar()+
ggtitle("Repartition of tunnels")
ggplot(Fires, aes(x=HGV,y=Traffic))+
geom_point()+
ggtitle("Traffic VS HGV")
ggplot(Fires, aes(x=Fires, fill=Urban))+
geom_bar(position = "dodge")+
ggtitle("Fire VS Urban ")
ggplot(Fires, aes(x=Slope, y=Fires))+
geom_point(shape=1)+
ggtitle("Fires VS slope")
ggplot(Fires, aes(x=Fires, fill=Company))+
geom_bar(position="fill")+
ggtitle("Fires by compagny")
ggplot(Fires, aes(x=Tunnel, y=Fires))+
geom_point()+
ggtitle("Fires by Tunnel")
ggplot(Fires, aes(x=Fires, fill=SlopeType))+
geom_bar(position = position_dodge(0.5))+
ggtitle("Fires by SlopeType")
ggplot(Fires, aes(x=Fires, fill=SlopeType))+
geom_bar(position = "fill")+
ggtitle("Fires by SlopeType")
ggplot(Fires, aes(x=Traffic, y=Fires, shape=SlopeType))+
geom_point()+
facet_grid(~SlopeType)
ggtitle("Fires VS Traffic, by Slope type")
ggplot(Fires, aes(x= Slope,y=Fires))+
geom_bin_2d()+
ggtitle("Fires VS Slope")
# lm1 <-lm(Fires~.,data=Fires)
# summary(lm1)
lm1 <- lm(Fires~Traffic+HGV+Slope+Urban+Type+Length+Limit+SlopeType, data = Fires)
summary(lm1)
#Checking linearity
y<-fitted.values(lm1)
r<-rstandard(lm1)
ggplot(data.frame(y,r),aes(y,r))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("standardized residuals vs fitted values")
#checking variance
r2 <- abs(r)
ggplot(data.frame(y,r2),aes(y,r2))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("absolute standardized residuals vs fitted values")
# checking independance
acf(r, lag.max = NULL,
type = c("correlation", "covariance", "partial"),
plot = TRUE, na.action = na.fail, demean = TRUE)
pacf(r, lag.max = NULL,
plot = TRUE, na.action = na.fail, demean = TRUE)
#checking normality
ggplot(lm1, aes(sample=r))+
stat_qq()+
geom_abline(slope=1,intercept = coefficients(lm1)[1])+
ggtitle("Normal Q-Q plot")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(cache = TRUE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(ggplot2)
library(corrplot)
library(plotly)
library(ggExtra)
load("Data/Fires.RData")
head(Fires)
#str(Fires)
# Fires[1:nrow(Fires),2:ncol(Fires)] %>% pivot_longer(everything()) %>%
#   ggplot(aes(value)) +
#   facet_wrap(~ name, scales = "free",ncol=3) +
#   geom_histogram()+
#   ggtitle("First look on the data")
bw=0.3
ggplot(Fires, aes(x=Fires))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1)+
ggtitle("Repartition of y")
# yp<-density(Fires$Fires)
# pp<-rpois(length(yp),0.8)
p<-data.frame(rexp(100,2))
ggplot(p,aes(x=p[,1]))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1, bw=bw)+
ggtitle("exp(2)")
p<-data.frame(rpois(10000,0.8))
ggplot(p,aes(x=p[,1]))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1, bw=bw)+
ggtitle("pois(0.8)")
ggplot(Fires, aes(x=Traffic,y=Fires))+
geom_point(shape=1)+
ggtitle("Fires vs traffic")
ggplot(Fires, aes(Fires, fill=as.factor(Limit)))+
geom_bar(position = position_dodge(0.5), alpha =0.5)+
ggtitle("Count of fire, by limit of speed")
ggplot(Fires, aes(x=Fires))+
geom_bar(shape=1)+
facet_grid(~Type)+
ggtitle("Fires by type of tunnel")
ggplot(Fires, aes(x=Fires, fill=Type))+
geom_bar(position="fill")+
ggtitle("Repartition of fires by tunnel type")
ggplot(Fires, aes(x=Type))+
geom_bar()+
ggtitle("Repartition of tunnels")
ggplot(Fires, aes(x=HGV,y=Traffic))+
geom_point()+
ggtitle("Traffic VS HGV")
ggplot(Fires, aes(x=Fires, fill=Urban))+
geom_bar(position = "dodge")+
ggtitle("Fire VS Urban ")
ggplot(Fires, aes(x=Slope, y=Fires))+
geom_point(shape=1)+
ggtitle("Fires VS slope")
ggplot(Fires, aes(x=Fires, fill=Company))+
geom_bar(position="fill")+
ggtitle("Fires by compagny")
ggplot(Fires, aes(x=Tunnel, y=Fires))+
geom_point()+
ggtitle("Fires by Tunnel")
ggplot(Fires, aes(x=Fires, fill=SlopeType))+
geom_bar(position = position_dodge(0.5))+
ggtitle("Fires by SlopeType")
ggplot(Fires, aes(x=Fires, fill=SlopeType))+
geom_bar(position = "fill")+
ggtitle("Fires by SlopeType")
ggplot(Fires, aes(x=Traffic, y=Fires, shape=SlopeType))+
geom_point()+
facet_grid(~SlopeType)
ggtitle("Fires VS Traffic, by Slope type")
ggplot(Fires, aes(x= Slope,y=Fires))+
geom_bin_2d()+
ggtitle("Fires VS Slope")
# lm1 <-lm(Fires~.,data=Fires)
# summary(lm1)
lm1 <- lm(Fires~Traffic+HGV+Slope+Urban+Type+Length+Limit+SlopeType, data = Fires)
summary(lm1)
#Checking linearity
y<-fitted.values(lm1)
r<-rstandard(lm1)
ggplot(data.frame(y,r),aes(y,r))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("standardized residuals vs fitted values")
#checking variance
r2 <- abs(r)
ggplot(data.frame(y,r2),aes(y,r2))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("absolute standardized residuals vs fitted values")
# checking independance
acf(r, lag.max = NULL,
type = c("correlation", "covariance", "partial"),
plot = TRUE, na.action = na.fail, demean = TRUE)
pacf(r, lag.max = NULL,
plot = TRUE, na.action = na.fail, demean = TRUE)
#checking normality
ggplot(lm1, aes(sample=r))+
stat_qq()+
geom_abline(slope=1,intercept = 0)+
ggtitle("Normal Q-Q plot")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
load("Data/Accidents.RData")
head(Accidents)
ggplot(Accidents, aes(Acc))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1)+
ggtitle("Density of accidents")
ggplot(Accidents, aes(x=Traffic,y=Acc))+
geom_point(shape=1)+
ggtitle("Accidents vs traffic")
ggplot(Accidents, aes(Acc))+
geom_bar(alpha =0.5)+
facet_grid(rows=vars(Limit), space = "free" )+
ggtitle("Count of accidents, by limit of speed")
ggplot(Accidents, aes(x=Acc))+
geom_bar(shape=1)+
facet_grid(~Type)+
ggtitle("Accidents by type of tunnel")
ggplot(Accidents, aes(x=Acc, fill=Type))+
geom_bar(position="fill")+
ggtitle("Repartition of Accidents by tunnel type")
ggplot(Accidents, aes(x=Type))+
geom_bar()+
ggtitle("Repartition of tunnels")
ggplot(Accidents, aes(x=HGV,y=Traffic))+
geom_point()+
ggtitle("Traffic VS HGV")
ggplot(Accidents, aes(x=Acc, fill=Urban))+
geom_bar(position = "dodge")+
ggtitle("Accidents VS Urban ")
ggplot(Accidents, aes(x=Slope, y=Acc))+
geom_point(shape=1)+
ggtitle("Accidents VS slope")
ggplot(Accidents, aes(x=Acc, fill=Company))+
geom_bar(position="fill")+
ggtitle("Accidents by compagny")
ggplot(Accidents, aes(x=Tunnel, y=Acc))+
geom_point()+
ggtitle("Accidents by Tunnel")
ggplot(Accidents, aes(x=Acc, fill=SlopeType))+
geom_bar(position = position_dodge(0.5))+
ggtitle("Accidents by SlopeType")
ggplot(Accidents, aes(x=Acc, fill=SlopeType))+
geom_bar(position = "fill")+
ggtitle("Accidents by SlopeType")
ggplot(Accidents, aes(x=Traffic, y=Acc, shape=SlopeType))+
geom_point()+
facet_grid(~SlopeType)
ggtitle("Accidents VS Traffic, by Slope type")
ggplot(Accidents, aes(x= Slope,y=Acc))+
geom_bin_2d()+
ggtitle("Accidents VS Slope")
lm1 <- lm(Acc~Traffic+HGV+Slope+Urban+Type+Length+Limit+SlopeType+Width+Lanes, data=Accidents)
summary(lm1)
#Checking linearity
y<-fitted.values(lm1)
r<-rstandard(lm1)
ggplot(data.frame(y,r),aes(y,r))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("standardized residuals vs fitted values")
#checking variance
r2 <- abs(r)
ggplot(data.frame(y,r2),aes(y,r2))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("absolute standardized residuals vs fitted values")
# checking independance
acf(r, lag.max = NULL,
type = c("correlation", "covariance", "partial"),
plot = TRUE, na.action = na.fail, demean = TRUE)
pacf(r, lag.max = NULL,
plot = TRUE, na.action = na.fail, demean = TRUE)
#checking normality
ggplot(lm1, aes(sample=r))+
stat_qq()+
geom_abline(slope=1,intercept = 0)+
ggtitle("Normal Q-Q plot")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
load("Data/Breakdowns.RData")
head(Breakdowns)
ggplot(Breakdowns, aes(x=Breakdowns))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1)+
ggtitle("Repartition of y")
ggplot(Breakdowns, aes(x=Length, y=Breakdowns,
size = Traffic,  color= Traffic)) +
geom_point(alpha=0.3)+
ggtitle("Breakdowns vs traffic")
ggplot(Breakdowns, aes(x=Traffic, y=Breakdowns) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
ggtitle("Breakdowns vs traffic")
ggplot(Breakdowns, aes(Breakdowns, fill=as.factor(Limit)))+
geom_bar(position = position_dodge(0.5), alpha =0.5)+
ggtitle("Count of fire, by limit of speed")
ggplot(Breakdowns, aes(x=Breakdowns))+
geom_bar(shape=1)+
facet_grid(~Type)+
ggtitle("Breakdowns by type of tunnel")
ggplot(Breakdowns, aes(x=Breakdowns, fill=Type))+
geom_bar(position="fill")+
ggtitle("Repartition of Breakdowns by tunnel type")
ggplot(Breakdowns, aes(x=Type))+
geom_bar()+
ggtitle("Repartition of tunnels")
ggplot(Breakdowns, aes(x=HGV,y=Traffic))+
geom_point()+
ggtitle("Traffic VS HGV")
ggplot(Breakdowns, aes(x=Breakdowns, fill=Urban))+
geom_bar(position = "dodge")+
ggtitle("Fire VS Urban ")
ggplot(Breakdowns, aes(x=Slope, y=Breakdowns))+
geom_point(shape=1)+
ggtitle("Breakdowns VS slope")
ggplot(Breakdowns, aes(x=Breakdowns, fill=Company))+
geom_bar(position="fill")+
ggtitle("Breakdowns by compagny")
ggplot(Breakdowns, aes(x=Tunnel, y=Breakdowns))+
geom_point()+
ggtitle("Breakdowns by Tunnel")
ggplot(Breakdowns, aes(x=Breakdowns, fill=SlopeType))+
geom_bar(position = position_dodge(0.5))+
ggtitle("Breakdowns by SlopeType")
ggplot(Breakdowns, aes(x=Breakdowns, fill=SlopeType))+
geom_bar(position = "fill")+
ggtitle("Breakdowns by SlopeType")
ggplot(Breakdowns, aes(x=Traffic, y=Breakdowns, shape=SlopeType))+
geom_point()+
facet_grid(~SlopeType)+
ggtitle("Breakdowns VS Traffic, by Slope type")
ggplot(Breakdowns, aes(x= Slope,y=Breakdowns))+
geom_bin_2d()+
ggtitle("Breakdowns VS Slope")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
load("Data/Breakdowns.RData")
head(Breakdowns)
ggplot(Breakdowns, aes(x=Breakdowns))+
geom_histogram(aes(y=..density..), alpha=0.4, position="identity", lwd=0.1)+
geom_density(alpha=0.3, lwd=1)+
ggtitle("Repartition of y")
ggplot(Breakdowns, aes(x=Length, y=Breakdowns,
size = Traffic,  color= Traffic)) +
geom_point(alpha=0.3)+
ggtitle("Breakdowns vs traffic")
ggplot(Breakdowns, aes(x=Traffic, y=Breakdowns) ) +
stat_density_2d(aes(fill = ..level..), geom = "polygon")+
ggtitle("Breakdowns vs traffic")
ggplot(Breakdowns, aes(Breakdowns, fill=as.factor(Limit)))+
geom_bar(position = position_dodge(0.5), alpha =0.5)+
ggtitle("Count of fire, by limit of speed")
ggplot(Breakdowns, aes(x=Breakdowns))+
geom_bar(shape=1)+
facet_grid(~Type)+
ggtitle("Breakdowns by type of tunnel")
ggplot(Breakdowns, aes(x=Breakdowns, fill=Type))+
geom_bar(position="fill")+
ggtitle("Repartition of Breakdowns by tunnel type")
ggplot(Breakdowns, aes(x=Type))+
geom_bar()+
ggtitle("Repartition of tunnels")
ggplot(Breakdowns, aes(x=HGV,y=Traffic))+
geom_point()+
ggtitle("Traffic VS HGV")
ggplot(Breakdowns, aes(x=Breakdowns, fill=Urban))+
geom_bar(position = "dodge")+
ggtitle("Fire VS Urban ")
ggplot(Breakdowns, aes(x=Slope, y=Breakdowns))+
geom_point(shape=1)+
ggtitle("Breakdowns VS slope")
ggplot(Breakdowns, aes(x=Breakdowns, fill=Company))+
geom_bar(position="fill")+
ggtitle("Breakdowns by compagny")
ggplot(Breakdowns, aes(x=Tunnel, y=Breakdowns))+
geom_point()+
ggtitle("Breakdowns by Tunnel")
ggplot(Breakdowns, aes(x=Breakdowns, fill=SlopeType))+
geom_bar(position = position_dodge(0.5))+
ggtitle("Breakdowns by SlopeType")
ggplot(Breakdowns, aes(x=Breakdowns, fill=SlopeType))+
geom_bar(position = "fill")+
ggtitle("Breakdowns by SlopeType")
ggplot(Breakdowns, aes(x=Traffic, y=Breakdowns, shape=SlopeType))+
geom_point()+
facet_grid(~SlopeType)+
ggtitle("Breakdowns VS Traffic, by Slope type")
ggplot(Breakdowns, aes(x= Slope,y=Breakdowns))+
geom_bin_2d()+
ggtitle("Breakdowns VS Slope")
# lm1 <-lm(Fires~.,data=Fires)
# summary(lm1)
lm1 <- lm(Breakdowns~Traffic+HGV+Slope+Urban+Type+Length+Limit+SlopeType, data = Breakdowns)
summary(lm1)
#Checking linearity
y<-fitted.values(lm1)
r<-rstandard(lm1)
ggplot(data.frame(y,r),aes(y,r))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("standardized residuals vs fitted values")
#checking variance
r2 <- abs(r)
ggplot(data.frame(y,r2),aes(y,r2))+
geom_point(shape=1)+
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)+
ggtitle("absolute standardized residuals vs fitted values")
# checking independance
acf(r, lag.max = NULL,
type = c("correlation", "covariance", "partial"),
plot = TRUE, na.action = na.fail, demean = TRUE)
pacf(r, lag.max = NULL,
plot = TRUE, na.action = na.fail, demean = TRUE)
#checking normality
ggplot(lm1, aes(sample=r))+
stat_qq()+
geom_abline(slope=1,intercept = 0)+
ggtitle("Normal Q-Q plot")
